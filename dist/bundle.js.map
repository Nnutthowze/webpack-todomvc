{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap e0c4996238325c1a7b23","webpack:///./helpers.js","webpack:///./app.js","webpack:///./bootstrap.js","webpack:///./controller.js","webpack:///./model.js","webpack:///./store.js","webpack:///./template.js","webpack:///./view.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","qs","selector","scope","document","querySelector","qsa","querySelectorAll","$on","target","type","callback","useCapture","addEventListener","$delegate","handler","dispatchEvent","event","targetElement","potentialElements","Array","indexOf","$parent","element","tagName","parentNode","toLowerCase","NodeList","forEach","Todo","this","storage","__WEBPACK_IMPORTED_MODULE_4__store__","model","__WEBPACK_IMPORTED_MODULE_3__model__","template","__WEBPACK_IMPORTED_MODULE_5__template__","view","__WEBPACK_IMPORTED_MODULE_1__view__","controller","__WEBPACK_IMPORTED_MODULE_2__controller__","onLoad","setView","location","hash","__WEBPACK_IMPORTED_MODULE_0__styles_styles_scss__","__WEBPACK_IMPORTED_MODULE_0__app__","__WEBPACK_IMPORTED_MODULE_1__helpers__","window","Controller","that","bind","title","addItem","item","editItem","id","editItemSave","editItemCancel","removeItem","toggleComplete","completed","removeCompletedItems","status","toggleAll","locationHash","route","split","page","_updateFilterState","showAll","read","data","render","showActive","showCompleted","trim","create","_filter","update","remove","silent","_updateCount","getCount","todos","active","visible","checked","total","force","activeRoute","_activeRoute","charAt","toUpperCase","substr","_lastActiveRoute","currentPage","Model","_typeof","Symbol","iterator","obj","constructor","newItem","save","query","queryType","findAll","parseInt","find","removeAll","drop","todo","Store","_dbName","localStorage","JSON","stringify","parse","filter","q","updateData","length","key","Date","getTime","push","splice","Template","defaultTemplate","htmlEscapes","&","<",">","\"","'","`","escapeHtmlChar","chr","reHasUnescapedHtml","RegExp","source","escape","string","test","replace","show","itemCounter","activeTodos","clearCompletedButton","completedTodos","View","ENTER_KEY","ESCAPE_KEY","$todoList","__WEBPACK_IMPORTED_MODULE_0__helpers__","$todoItemCounter","$clearCompleted","$main","$footer","$toggleAll","$newTodo","_removeItem","elem","removeChild","_clearCompletedButton","completedCount","innerHTML","style","display","_setFilter","className","_elementComplete","listItem","_editItem","input","createElement","appendChild","focus","_editItemDone","label","textContent","viewCmd","parameter","showEntries","updateElementCount","contentBlockVisibility","setFilter","clearNewTodo","elementComplete","editItemDone","_itemId","li","dataset","_bindItemEditDone","iscanceled","keyCode","blur","_bindItemEditCancel"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/src/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return qs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return qsa; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return $on; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return $delegate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return $parent; });\n/* unused harmony export remove */\n/* unused harmony export log */\n/* unused harmony export leftPad */\n\n\n// Get element(s) by CSS selector:\n\nfunction qs(selector, scope) {\n  return (scope || document).querySelector(selector);\n}\n\nfunction qsa(selector, scope) {\n  return (scope || document).querySelectorAll(selector);\n}\n\nfunction log() {\n  if (window.console && window.console.log) {\n    window.console.log.apply(window.console, arguments); // eslint-disable-line\n  }\n}\n\n// addEventListener wrapper:\nfunction $on(target, type, callback, useCapture) {\n  target.addEventListener(type, callback, !!useCapture);\n}\n\n// Attach a handler to event for all elements that match the selector,\n// now or in the future, based on a root element\nfunction $delegate(target, selector, type, handler) {\n  function dispatchEvent(event) {\n    var targetElement = event.target;\n    var potentialElements = qsa(selector, target);\n    var hasMatch = Array.prototype.indexOf.call(potentialElements, targetElement) >= 0;\n\n    if (hasMatch) {\n      handler.call(targetElement, event);\n    }\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/Events/blur\n  var useCapture = type === 'blur' || type === 'focus';\n\n  $on(target, type, dispatchEvent, useCapture);\n}\n\n// Find the element's parent with the given tag name:\n// $parent(qs('a'), 'div');\nfunction $parent(element, tagName) {\n  if (!element.parentNode) {\n    return;\n  }\n  if (element.parentNode.tagName.toLowerCase() === tagName.toLowerCase()) {\n    return element.parentNode;\n  }\n  return $parent(element.parentNode, tagName);\n}\n\n// removes an element from an array\n// const x = [1,2,3]\n// remove(x, 2)\n// x ~== [1,3]\nfunction remove(array, thing) {\n  var index = array.indexOf(thing);\n  if (index === -1) {\n    return array;\n  }\n  array.splice(index, 1);\n}\n\n// pad the left of the given string by the given size with the given character\n// leftPad('10', 3, '0') -> 010\nfunction leftPad(str, size, padWith) {\n  if (size <= str.length) {\n    return str;\n  } else {\n    return Array(size - str.length + 1).join(padWith || '0') + str;\n  }\n}\n\n// Allow for looping on nodes by chaining:\n// qsa('.foo').forEach(function () {})\nNodeList.prototype.forEach = Array.prototype.forEach;\n\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__styles_styles_scss__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__styles_styles_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__styles_styles_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__view__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__controller__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__store__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__template__ = __webpack_require__(6);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return onLoad; });\n\n\n\n\n\n\n\n\n/**\n * Sets up a brand new Todo list.\n *\n * @param {string} name The name of your new to do list.\n */\nfunction Todo(name) {\n  this.storage = new __WEBPACK_IMPORTED_MODULE_4__store__[\"a\" /* default */](name);\n  this.model = new __WEBPACK_IMPORTED_MODULE_3__model__[\"a\" /* default */](this.storage);\n  this.template = new __WEBPACK_IMPORTED_MODULE_5__template__[\"a\" /* default */]();\n  this.view = new __WEBPACK_IMPORTED_MODULE_1__view__[\"a\" /* default */](this.template);\n  this.controller = new __WEBPACK_IMPORTED_MODULE_2__controller__[\"a\" /* default */](this.model, this.view);\n}\n\nfunction onLoad() {\n  var todo = new Todo('todos-vanillajs');\n  todo.controller.setView(document.location.hash);\n}\n\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__app__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__helpers__ = __webpack_require__(0);\n\n\n\n\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__helpers__[\"a\" /* $on */])(window, 'load', __WEBPACK_IMPORTED_MODULE_0__app__[\"a\" /* onLoad */]);\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__helpers__[\"a\" /* $on */])(window, 'hashchange', __WEBPACK_IMPORTED_MODULE_0__app__[\"a\" /* onLoad */]);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Takes a model and view and acts as the controller between them\n *\n * @constructor\n * @param {object} model The model instance\n * @param {object} view The view instance\n */\n\nfunction Controller(model, view) {\n  var that = this;\n  that.model = model;\n  that.view = view;\n\n  that.view.bind('newTodo', function (title) {\n    that.addItem(title);\n  });\n\n  that.view.bind('itemEdit', function (item) {\n    that.editItem(item.id);\n  });\n\n  that.view.bind('itemEditDone', function (item) {\n    that.editItemSave(item.id, item.title);\n  });\n\n  that.view.bind('itemEditCancel', function (item) {\n    that.editItemCancel(item.id);\n  });\n\n  that.view.bind('itemRemove', function (item) {\n    that.removeItem(item.id);\n  });\n\n  that.view.bind('itemToggle', function (item) {\n    that.toggleComplete(item.id, item.completed);\n  });\n\n  that.view.bind('removeCompleted', function () {\n    that.removeCompletedItems();\n  });\n\n  that.view.bind('toggleAll', function (status) {\n    that.toggleAll(status.completed);\n  });\n}\n\n/**\n * Loads and initialises the view\n *\n * @param {string} '' | 'active' | 'completed'\n */\nController.prototype.setView = function (locationHash) {\n  var route = locationHash.split('/')[1];\n  var page = route || '';\n  this._updateFilterState(page);\n};\n\n/**\n * An event to fire on load. Will get all items and display them in the\n * todo-list\n */\nController.prototype.showAll = function () {\n  var that = this;\n  that.model.read(function (data) {\n    that.view.render('showEntries', data);\n  });\n};\n\n/**\n * Renders all active tasks\n */\nController.prototype.showActive = function () {\n  var that = this;\n  that.model.read({ completed: false }, function (data) {\n    that.view.render('showEntries', data);\n  });\n};\n\n/**\n * Renders all completed tasks\n */\nController.prototype.showCompleted = function () {\n  var that = this;\n  that.model.read({ completed: true }, function (data) {\n    that.view.render('showEntries', data);\n  });\n};\n\n/**\n * An event to fire whenever you want to add an item. Simply pass in the event\n * object and it'll handle the DOM insertion and saving of the new item.\n */\nController.prototype.addItem = function (title) {\n  var that = this;\n\n  if (title.trim() === '') {\n    return;\n  }\n\n  that.model.create(title, function () {\n    that.view.render('clearNewTodo');\n    that._filter(true);\n  });\n};\n\n/*\n  * Triggers the item editing mode.\n  */\nController.prototype.editItem = function (id) {\n  var that = this;\n  that.model.read(id, function (data) {\n    that.view.render('editItem', { id: id, title: data[0].title });\n  });\n};\n\n/*\n  * Finishes the item editing mode successfully.\n  */\nController.prototype.editItemSave = function (id, title) {\n  var that = this;\n  if (title.trim()) {\n    that.model.update(id, { title: title }, function () {\n      that.view.render('editItemDone', { id: id, title: title });\n    });\n  } else {\n    that.removeItem(id);\n  }\n};\n\n/*\n  * Cancels the item editing mode.\n  */\nController.prototype.editItemCancel = function (id) {\n  var that = this;\n  that.model.read(id, function (data) {\n    that.view.render('editItemDone', { id: id, title: data[0].title });\n  });\n};\n\n/**\n * By giving it an ID it'll find the DOM element matching that ID,\n * remove it from the DOM and also remove it from storage.\n *\n * @param {number} id The ID of the item to remove from the DOM and\n * storage\n */\nController.prototype.removeItem = function (id) {\n  var that = this;\n  that.model.remove(id, function () {\n    that.view.render('removeItem', id);\n  });\n\n  that._filter();\n};\n\n/**\n * Will remove all completed items from the DOM and storage.\n */\nController.prototype.removeCompletedItems = function () {\n  var that = this;\n  that.model.read({ completed: true }, function (data) {\n    data.forEach(function (item) {\n      that.removeItem(item.id);\n    });\n  });\n\n  that._filter();\n};\n\n/**\n * Give it an ID of a model and a checkbox and it will update the item\n * in storage based on the checkbox's state.\n *\n * @param {number} id The ID of the element to complete or uncomplete\n * @param {object} checkbox The checkbox to check the state of complete\n *                          or not\n * @param {boolean|undefined} silent Prevent re-filtering the todo items\n */\nController.prototype.toggleComplete = function (id, completed, silent) {\n  var that = this;\n  that.model.update(id, { completed: completed }, function () {\n    that.view.render('elementComplete', {\n      id: id,\n      completed: completed\n    });\n  });\n\n  if (!silent) {\n    that._filter();\n  }\n};\n\n/**\n * Will toggle ALL checkboxes' on/off state and completeness of models.\n * Just pass in the event object.\n */\nController.prototype.toggleAll = function (completed) {\n  var that = this;\n  that.model.read({ completed: !completed }, function (data) {\n    data.forEach(function (item) {\n      that.toggleComplete(item.id, completed, true);\n    });\n  });\n\n  that._filter();\n};\n\n/**\n * Updates the pieces of the page which change depending on the remaining\n * number of todos.\n */\nController.prototype._updateCount = function () {\n  var that = this;\n  that.model.getCount(function (todos) {\n    that.view.render('updateElementCount', todos.active);\n    that.view.render('clearCompletedButton', {\n      completed: todos.completed,\n      visible: todos.completed > 0\n    });\n\n    that.view.render('toggleAll', { checked: todos.completed === todos.total });\n    that.view.render('contentBlockVisibility', { visible: todos.total > 0 });\n  });\n};\n\n/**\n * Re-filters the todo items, based on the active route.\n * @param {boolean|undefined} force  forces a re-painting of todo items.\n */\nController.prototype._filter = function (force) {\n  var activeRoute = this._activeRoute.charAt(0).toUpperCase() + this._activeRoute.substr(1);\n\n  // Update the elements on the page, which change with each completed todo\n  this._updateCount();\n\n  // If the last active route isn't \"All\", or we're switching routes, we\n  // re-create the todo item elements, calling:\n  //   this.show[All|Active|Completed]();\n  if (force || this._lastActiveRoute !== 'All' || this._lastActiveRoute !== activeRoute) {\n    this['show' + activeRoute]();\n  }\n\n  this._lastActiveRoute = activeRoute;\n};\n\n/**\n * Simply updates the filter nav's selected states\n */\nController.prototype._updateFilterState = function (currentPage) {\n  // Store a reference to the active route, allowing us to re-filter todo\n  // items as they are marked complete or incomplete.\n  this._activeRoute = currentPage;\n\n  if (currentPage === '') {\n    this._activeRoute = 'All';\n  }\n\n  this._filter();\n\n  this.view.render('setFilter', currentPage);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Controller);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Creates a new Model instance and hooks up the storage.\n *\n * @constructor\n * @param {object} storage A reference to the client side storage class\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction Model(storage) {\n  this.storage = storage;\n}\n\n/**\n * Creates a new todo model\n *\n * @param {string} [title] The title of the task\n * @param {function} [callback] The callback to fire after the model is created\n */\nModel.prototype.create = function (title, callback) {\n  title = title || '';\n  callback = callback || function () {};\n\n  var newItem = {\n    title: title.trim(),\n    completed: false\n  };\n\n  this.storage.save(newItem, callback);\n};\n\n/**\n * Finds and returns a model in storage. If no query is given it'll simply\n * return everything. If you pass in a string or number it'll look that up as\n * the ID of the model to find. Lastly, you can pass it an object to match\n * against.\n *\n * @param {string|number|object} [query] A query to match models against\n * @param {function} [callback] The callback to fire after the model is found\n *\n * @example\n * model.read(1, func); // Will find the model with an ID of 1\n * model.read('1'); // Same as above\n * //Below will find a model with foo equalling bar and hello equalling world.\n * model.read({ foo: 'bar', hello: 'world' });\n */\nModel.prototype.read = function (query, callback) {\n  var queryType = typeof query === 'undefined' ? 'undefined' : _typeof(query);\n  callback = callback || function () {};\n\n  if (queryType === 'function') {\n    callback = query;\n    return this.storage.findAll(callback);\n  } else if (queryType === 'string' || queryType === 'number') {\n    query = parseInt(query, 10);\n    this.storage.find({ id: query }, callback);\n  } else {\n    this.storage.find(query, callback);\n  }\n};\n\n/**\n * Updates a model by giving it an ID, data to update, and a callback to fire when\n * the update is complete.\n *\n * @param {number} id The id of the model to update\n * @param {object} data The properties to update and their new value\n * @param {function} callback The callback to fire when the update is complete.\n */\nModel.prototype.update = function (id, data, callback) {\n  this.storage.save(data, callback, id);\n};\n\n/**\n * Removes a model from storage\n *\n * @param {number} id The ID of the model to remove\n * @param {function} callback The callback to fire when the removal is complete.\n */\nModel.prototype.remove = function (id, callback) {\n  this.storage.remove(id, callback);\n};\n\n/**\n * WARNING: Will remove ALL data from storage.\n *\n * @param {function} callback The callback to fire when the storage is wiped.\n */\nModel.prototype.removeAll = function (callback) {\n  this.storage.drop(callback);\n};\n\n/**\n * Returns a count of all todos\n */\nModel.prototype.getCount = function (callback) {\n  var todos = {\n    active: 0,\n    completed: 0,\n    total: 0\n  };\n\n  this.storage.findAll(function (data) {\n    data.forEach(function (todo) {\n      if (todo.completed) {\n        todos.completed++;\n      } else {\n        todos.active++;\n      }\n\n      todos.total++;\n    });\n    callback(todos);\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Model);\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Creates a new client side storage object and will create an empty\n * collection if no collection already exists.\n *\n * @param {string} name The name of our DB we want to use\n * @param {function} callback Our fake DB uses callbacks because in\n * real life you probably would be making AJAX calls\n */\n\nfunction Store(name, callback) {\n  callback = callback || function () {};\n\n  this._dbName = name;\n\n  if (!localStorage[name]) {\n    var data = {\n      todos: []\n    };\n\n    localStorage[name] = JSON.stringify(data);\n  }\n\n  callback.call(this, JSON.parse(localStorage[name]));\n}\n\n/**\n * Finds items based on a query given as a JS object\n *\n * @param {object} query The query to match against (i.e. {foo: 'bar'})\n * @param {function} callback   The callback to fire when the query has\n * completed running\n *\n * @example\n * db.find({foo: 'bar', hello: 'world'}, function (data) {\n *\t // data will return any items that have foo: bar and\n *\t // hello: world in their properties\n * });\n */\nStore.prototype.find = function (query, callback) {\n  if (!callback) {\n    return;\n  }\n\n  var todos = JSON.parse(localStorage[this._dbName]).todos;\n\n  callback.call(this, todos.filter(function (todo) {\n    for (var q in query) {\n      if (query[q] !== todo[q]) {\n        return false;\n      }\n    }\n    return true;\n  }));\n};\n\n/**\n * Will retrieve all data from the collection\n *\n * @param {function} callback The callback to fire upon retrieving data\n */\nStore.prototype.findAll = function (callback) {\n  callback = callback || function () {};\n  callback.call(this, JSON.parse(localStorage[this._dbName]).todos);\n};\n\n/**\n * Will save the given data to the DB. If no item exists it will create a new\n * item, otherwise it'll simply update an existing item's properties\n *\n * @param {object} updateData The data to save back into the DB\n * @param {function} callback The callback to fire after saving\n * @param {number} id An optional param to enter an ID of an item to update\n */\nStore.prototype.save = function (updateData, callback, id) {\n  var data = JSON.parse(localStorage[this._dbName]);\n  var todos = data.todos;\n\n  callback = callback || function () {};\n\n  // If an ID was actually given, find the item and update each property\n  if (id) {\n    for (var i = 0; i < todos.length; i++) {\n      if (todos[i].id === id) {\n        for (var key in updateData) {\n          if (updateData.hasOwnProperty(key)) {\n            todos[i][key] = updateData[key];\n          }\n        }\n        break;\n      }\n    }\n\n    localStorage[this._dbName] = JSON.stringify(data);\n    callback.call(this, JSON.parse(localStorage[this._dbName]).todos);\n  } else {\n    // Generate an ID\n    updateData.id = new Date().getTime();\n\n    todos.push(updateData);\n    localStorage[this._dbName] = JSON.stringify(data);\n    callback.call(this, [updateData]);\n  }\n};\n\n/**\n * Will remove an item from the Store based on its ID\n *\n * @param {number} id The ID of the item you want to remove\n * @param {function} callback The callback to fire after saving\n */\nStore.prototype.remove = function (id, callback) {\n  var data = JSON.parse(localStorage[this._dbName]);\n  var todos = data.todos;\n\n  for (var i = 0; i < todos.length; i++) {\n    if (todos[i].id == id) {\n      // eslint-disable-line\n      todos.splice(i, 1);\n      break;\n    }\n  }\n\n  localStorage[this._dbName] = JSON.stringify(data);\n  callback.call(this, JSON.parse(localStorage[this._dbName]).todos);\n};\n\n/**\n * Will drop all storage and start fresh\n *\n * @param {function} callback The callback to fire after dropping the data\n */\nStore.prototype.drop = function (callback) {\n  localStorage[this._dbName] = JSON.stringify({ todos: [] });\n  callback.call(this, JSON.parse(localStorage[this._dbName]).todos);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Store);\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar htmlEscapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#x27;',\n  '`': '&#x60;'\n};\n\nvar escapeHtmlChar = function escapeHtmlChar(chr) {\n  return htmlEscapes[chr];\n};\n\nvar reUnescapedHtml = /[&<>\"'`]/g;\nvar reHasUnescapedHtml = new RegExp(reUnescapedHtml.source);\n\nvar escape = function escape(string) {\n  return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;\n};\n\n/**\n * Sets up defaults for all the Template methods such as a default template\n *\n * @constructor\n */\nfunction Template() {\n  this.defaultTemplate = '<li data-id=\"{{id}}\" class=\"{{completed}}\">' + '<div class=\"view\">' + '<input class=\"toggle\" type=\"checkbox\" {{checked}}>' + '<label>{{title}}</label>' + '<button class=\"destroy\"></button>' + '</div>' + '</li>';\n}\n\n/**\n * Creates an <li> HTML string and returns it for placement in your app.\n *\n * NOTE: In real life you should be using a templating engine such as Mustache\n * or Handlebars, however, this is a vanilla JS example.\n *\n * @param {object} data The object containing keys you want to find in the\n *                      template to replace.\n * @returns {string} HTML String of an <li> element\n *\n * @example\n * view.show({\n *\tid: 1,\n *\ttitle: \"Hello World\",\n *\tcompleted: 0,\n * });\n */\nTemplate.prototype.show = function (data) {\n  var i, l;\n  var view = '';\n\n  for (i = 0, l = data.length; i < l; i++) {\n    var template = this.defaultTemplate;\n    var completed = '';\n    var checked = '';\n\n    if (data[i].completed) {\n      completed = 'completed';\n      checked = 'checked';\n    }\n\n    template = template.replace('{{id}}', data[i].id);\n    template = template.replace('{{title}}', escape(data[i].title));\n    template = template.replace('{{completed}}', completed);\n    template = template.replace('{{checked}}', checked);\n\n    view = view + template;\n  }\n\n  return view;\n};\n\n/**\n * Displays a counter of how many to dos are left to complete\n *\n * @param {number} activeTodos The number of active todos.\n * @returns {string} String containing the count\n */\nTemplate.prototype.itemCounter = function (activeTodos) {\n  var plural = activeTodos === 1 ? '' : 's';\n\n  return '<strong>' + activeTodos + '</strong> item' + plural + ' left';\n};\n\n/**\n * Updates the text within the \"Clear completed\" button\n *\n * @param  {[type]} completedTodos The number of completed todos.\n * @returns {string} String containing the count\n */\nTemplate.prototype.clearCompletedButton = function (completedTodos) {\n  if (completedTodos > 0) {\n    return 'Clear completed';\n  } else {\n    return '';\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Template);\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helpers__ = __webpack_require__(0);\n\n\n/**\n * View that abstracts away the browser's DOM completely.\n * It has two simple entry points:\n *\n *   - bind(eventName, handler)\n *     Takes a todo application event and registers the handler\n *   - render(command, parameterObject)\n *     Renders the given command with the options\n */\nfunction View(template) {\n  this.template = template;\n\n  this.ENTER_KEY = 13;\n  this.ESCAPE_KEY = 27;\n\n  this.$todoList = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qs */])('.todo-list');\n  this.$todoItemCounter = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qs */])('.todo-count');\n  this.$clearCompleted = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qs */])('.clear-completed');\n  this.$main = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qs */])('.main');\n  this.$footer = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qs */])('.footer');\n  this.$toggleAll = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qs */])('.toggle-all');\n  this.$newTodo = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qs */])('.new-todo');\n}\n\nView.prototype._removeItem = function (id) {\n  var elem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qs */])('[data-id=\"' + id + '\"]');\n\n  if (elem) {\n    this.$todoList.removeChild(elem);\n  }\n};\n\nView.prototype._clearCompletedButton = function (completedCount, visible) {\n  this.$clearCompleted.innerHTML = this.template.clearCompletedButton(completedCount);\n  this.$clearCompleted.style.display = visible ? 'block' : 'none';\n};\n\nView.prototype._setFilter = function (currentPage) {\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qs */])('.filters .selected').className = '';\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qs */])('.filters [href=\"#/' + currentPage + '\"]').className = 'selected';\n};\n\nView.prototype._elementComplete = function (id, completed) {\n  var listItem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qs */])('[data-id=\"' + id + '\"]');\n\n  if (!listItem) {\n    return;\n  }\n\n  listItem.className = completed ? 'completed' : '';\n\n  // In case it was toggled from an event and not by clicking the checkbox\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qs */])('input', listItem).checked = completed;\n};\n\nView.prototype._editItem = function (id, title) {\n  var listItem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qs */])('[data-id=\"' + id + '\"]');\n\n  if (!listItem) {\n    return;\n  }\n\n  listItem.className = listItem.className + ' editing';\n\n  var input = document.createElement('input');\n  input.className = 'edit';\n\n  listItem.appendChild(input);\n  input.focus();\n  input.value = title;\n};\n\nView.prototype._editItemDone = function (id, title) {\n  var listItem = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qs */])('[data-id=\"' + id + '\"]');\n\n  if (!listItem) {\n    return;\n  }\n\n  var input = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* qs */])('input.edit', listItem);\n  listItem.removeChild(input);\n\n  listItem.className = listItem.className.replace('editing', '');\n\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"c\" /* qsa */])('label', listItem).forEach(function (label) {\n    label.textContent = title;\n  });\n};\n\nView.prototype.render = function (viewCmd, parameter) {\n  var that = this;\n  var viewCommands = {\n    showEntries: function showEntries() {\n      that.$todoList.innerHTML = that.template.show(parameter);\n    },\n    removeItem: function removeItem() {\n      that._removeItem(parameter);\n    },\n    updateElementCount: function updateElementCount() {\n      that.$todoItemCounter.innerHTML = that.template.itemCounter(parameter);\n    },\n    clearCompletedButton: function clearCompletedButton() {\n      that._clearCompletedButton(parameter.completed, parameter.visible);\n    },\n    contentBlockVisibility: function contentBlockVisibility() {\n      that.$main.style.display = that.$footer.style.display = parameter.visible ? 'block' : 'none';\n    },\n    toggleAll: function toggleAll() {\n      that.$toggleAll.checked = parameter.checked;\n    },\n    setFilter: function setFilter() {\n      that._setFilter(parameter);\n    },\n    clearNewTodo: function clearNewTodo() {\n      that.$newTodo.value = '';\n    },\n    elementComplete: function elementComplete() {\n      that._elementComplete(parameter.id, parameter.completed);\n    },\n    editItem: function editItem() {\n      that._editItem(parameter.id, parameter.title);\n    },\n    editItemDone: function editItemDone() {\n      that._editItemDone(parameter.id, parameter.title);\n    }\n  };\n\n  viewCommands[viewCmd]();\n};\n\nView.prototype._itemId = function (element) {\n  var li = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* $parent */])(element, 'li');\n  return parseInt(li.dataset.id, 10);\n};\n\nView.prototype._bindItemEditDone = function (handler) {\n  var that = this;\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"e\" /* $delegate */])(that.$todoList, 'li .edit', 'blur', function () {\n    if (!this.dataset.iscanceled) {\n      handler({\n        id: that._itemId(this),\n        title: this.value\n      });\n    }\n  });\n\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"e\" /* $delegate */])(that.$todoList, 'li .edit', 'keypress', function (event) {\n    if (event.keyCode === that.ENTER_KEY) {\n      // Remove the cursor from the input when you hit enter just like if it\n      // were a real form\n      this.blur();\n    }\n  });\n};\n\nView.prototype._bindItemEditCancel = function (handler) {\n  var that = this;\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"e\" /* $delegate */])(that.$todoList, 'li .edit', 'keyup', function (event) {\n    if (event.keyCode === that.ESCAPE_KEY) {\n      this.dataset.iscanceled = true;\n      this.blur();\n\n      handler({ id: that._itemId(this) });\n    }\n  });\n};\n\nView.prototype.bind = function (event, handler) {\n  // eslint-disable-line\n  var that = this;\n  if (event === 'newTodo') {\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* $on */])(that.$newTodo, 'change', function () {\n      handler(that.$newTodo.value);\n    });\n  } else if (event === 'removeCompleted') {\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* $on */])(that.$clearCompleted, 'click', function () {\n      handler();\n    });\n  } else if (event === 'toggleAll') {\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* $on */])(that.$toggleAll, 'click', function () {\n      handler({ completed: this.checked });\n    });\n  } else if (event === 'itemEdit') {\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"e\" /* $delegate */])(that.$todoList, 'li label', 'dblclick', function () {\n      handler({ id: that._itemId(this) });\n    });\n  } else if (event === 'itemRemove') {\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"e\" /* $delegate */])(that.$todoList, '.destroy', 'click', function () {\n      handler({ id: that._itemId(this) });\n    });\n  } else if (event === 'itemToggle') {\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"e\" /* $delegate */])(that.$todoList, '.toggle', 'click', function () {\n      handler({\n        id: that._itemId(this),\n        completed: this.checked\n      });\n    });\n  } else if (event === 'itemEditDone') {\n    that._bindItemEditDone(handler);\n  } else if (event === 'itemEditCancel') {\n    that._bindItemEditCancel(handler);\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (View);\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/src/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e0c4996238325c1a7b23","'use strict'\n\n// Get element(s) by CSS selector:\nfunction qs(selector, scope) {\n  return (scope || document).querySelector(selector)\n}\n\nfunction qsa(selector, scope) {\n  return (scope || document).querySelectorAll(selector)\n}\n\n\nfunction log() {\n  if (window.console && window.console.log) {\n    window.console.log.apply(window.console, arguments) // eslint-disable-line\n  }\n}\n\n// addEventListener wrapper:\nfunction $on(target, type, callback, useCapture) {\n  target.addEventListener(type, callback, !!useCapture)\n}\n\n// Attach a handler to event for all elements that match the selector,\n// now or in the future, based on a root element\nfunction $delegate(target, selector, type, handler) {\n  function dispatchEvent(event) {\n    var targetElement = event.target\n    var potentialElements = qsa(selector, target)\n    var hasMatch = Array.prototype.indexOf.call(potentialElements, targetElement) >= 0\n\n    if (hasMatch) {\n      handler.call(targetElement, event)\n    }\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/Events/blur\n  var useCapture = type === 'blur' || type === 'focus'\n\n  $on(target, type, dispatchEvent, useCapture)\n}\n\n// Find the element's parent with the given tag name:\n// $parent(qs('a'), 'div');\nfunction $parent(element, tagName) {\n  if (!element.parentNode) {\n    return\n  }\n  if (element.parentNode.tagName.toLowerCase() === tagName.toLowerCase()) {\n    return element.parentNode\n  }\n  return $parent(element.parentNode, tagName)\n}\n\n// removes an element from an array\n// const x = [1,2,3]\n// remove(x, 2)\n// x ~== [1,3]\nfunction remove(array, thing) {\n  const index = array.indexOf(thing)\n  if (index === -1) {\n    return array\n  }\n  array.splice(index, 1)\n}\n\n// pad the left of the given string by the given size with the given character\n// leftPad('10', 3, '0') -> 010\nfunction leftPad(str, size, padWith) {\n  if (size <= str.length) {\n    return str\n  } else {\n    return Array(size - str.length + 1).join(padWith || '0') + str\n  }\n}\n\n// Allow for looping on nodes by chaining:\n// qsa('.foo').forEach(function () {})\nNodeList.prototype.forEach = Array.prototype.forEach;\n\nexport { qs, qsa, $on, $delegate, $parent, remove, log, leftPad };\n\n\n// WEBPACK FOOTER //\n// ./helpers.js","import './../styles/styles.scss';\n\nimport View from './view';\nimport Controller from './controller';\nimport Model from './model';\nimport Store from './store';\nimport Template from './template';\n\n/**\n * Sets up a brand new Todo list.\n *\n * @param {string} name The name of your new to do list.\n */\nfunction Todo(name) {\n  this.storage = new Store(name)\n  this.model = new Model(this.storage)\n  this.template = new Template()\n  this.view = new View(this.template)\n  this.controller = new Controller(this.model, this.view)\n}\n\nfunction onLoad() {\n  var todo = new Todo('todos-vanillajs')\n  todo.controller.setView(document.location.hash)\n}\n\nexport { onLoad };\n\n\n// WEBPACK FOOTER //\n// ./app.js","'use strict'\n\nimport { onLoad } from './app';\nimport { $on } from './helpers';\n\n$on(window, 'load', onLoad)\n$on(window, 'hashchange', onLoad)\n\n\n\n\n// WEBPACK FOOTER //\n// ./bootstrap.js","'use strict'\n\n/**\n * Takes a model and view and acts as the controller between them\n *\n * @constructor\n * @param {object} model The model instance\n * @param {object} view The view instance\n */\nfunction Controller(model, view) {\n  var that = this\n  that.model = model\n  that.view = view\n\n  that.view.bind('newTodo', function(title) {\n    that.addItem(title)\n  })\n\n  that.view.bind('itemEdit', function(item) {\n    that.editItem(item.id)\n  })\n\n  that.view.bind('itemEditDone', function(item) {\n    that.editItemSave(item.id, item.title)\n  })\n\n  that.view.bind('itemEditCancel', function(item) {\n    that.editItemCancel(item.id)\n  })\n\n  that.view.bind('itemRemove', function(item) {\n    that.removeItem(item.id)\n  })\n\n  that.view.bind('itemToggle', function(item) {\n    that.toggleComplete(item.id, item.completed)\n  })\n\n  that.view.bind('removeCompleted', function() {\n    that.removeCompletedItems()\n  })\n\n  that.view.bind('toggleAll', function(status) {\n    that.toggleAll(status.completed)\n  })\n}\n\n/**\n * Loads and initialises the view\n *\n * @param {string} '' | 'active' | 'completed'\n */\nController.prototype.setView = function(locationHash) {\n  var route = locationHash.split('/')[1]\n  var page = route || ''\n  this._updateFilterState(page)\n}\n\n/**\n * An event to fire on load. Will get all items and display them in the\n * todo-list\n */\nController.prototype.showAll = function() {\n  var that = this\n  that.model.read(function(data) {\n    that.view.render('showEntries', data)\n  })\n}\n\n/**\n * Renders all active tasks\n */\nController.prototype.showActive = function() {\n  var that = this\n  that.model.read({completed: false}, function(data) {\n    that.view.render('showEntries', data)\n  })\n}\n\n/**\n * Renders all completed tasks\n */\nController.prototype.showCompleted = function() {\n  var that = this\n  that.model.read({completed: true}, function(data) {\n    that.view.render('showEntries', data)\n  })\n}\n\n/**\n * An event to fire whenever you want to add an item. Simply pass in the event\n * object and it'll handle the DOM insertion and saving of the new item.\n */\nController.prototype.addItem = function(title) {\n  var that = this\n\n  if (title.trim() === '') {\n    return\n  }\n\n  that.model.create(title, function() {\n    that.view.render('clearNewTodo')\n    that._filter(true)\n  })\n}\n\n/*\n  * Triggers the item editing mode.\n  */\nController.prototype.editItem = function(id) {\n  var that = this\n  that.model.read(id, function(data) {\n    that.view.render('editItem', {id: id, title: data[0].title})\n  })\n}\n\n/*\n  * Finishes the item editing mode successfully.\n  */\nController.prototype.editItemSave = function(id, title) {\n  var that = this\n  if (title.trim()) {\n    that.model.update(id, {title: title}, function() {\n      that.view.render('editItemDone', {id: id, title: title})\n    })\n  } else {\n    that.removeItem(id)\n  }\n}\n\n/*\n  * Cancels the item editing mode.\n  */\nController.prototype.editItemCancel = function(id) {\n  var that = this\n  that.model.read(id, function(data) {\n    that.view.render('editItemDone', {id: id, title: data[0].title})\n  })\n}\n\n/**\n * By giving it an ID it'll find the DOM element matching that ID,\n * remove it from the DOM and also remove it from storage.\n *\n * @param {number} id The ID of the item to remove from the DOM and\n * storage\n */\nController.prototype.removeItem = function(id) {\n  var that = this\n  that.model.remove(id, function() {\n    that.view.render('removeItem', id)\n  })\n\n  that._filter()\n}\n\n/**\n * Will remove all completed items from the DOM and storage.\n */\nController.prototype.removeCompletedItems = function() {\n  var that = this\n  that.model.read({completed: true}, function(data) {\n    data.forEach(function(item) {\n      that.removeItem(item.id)\n    })\n  })\n\n  that._filter()\n}\n\n/**\n * Give it an ID of a model and a checkbox and it will update the item\n * in storage based on the checkbox's state.\n *\n * @param {number} id The ID of the element to complete or uncomplete\n * @param {object} checkbox The checkbox to check the state of complete\n *                          or not\n * @param {boolean|undefined} silent Prevent re-filtering the todo items\n */\nController.prototype.toggleComplete = function(id, completed, silent) {\n  var that = this\n  that.model.update(id, {completed: completed}, function() {\n    that.view.render('elementComplete', {\n      id: id,\n      completed: completed\n    })\n  })\n\n  if (!silent) {\n    that._filter()\n  }\n}\n\n/**\n * Will toggle ALL checkboxes' on/off state and completeness of models.\n * Just pass in the event object.\n */\nController.prototype.toggleAll = function(completed) {\n  var that = this\n  that.model.read({completed: !completed}, function(data) {\n    data.forEach(function(item) {\n      that.toggleComplete(item.id, completed, true)\n    })\n  })\n\n  that._filter()\n}\n\n/**\n * Updates the pieces of the page which change depending on the remaining\n * number of todos.\n */\nController.prototype._updateCount = function() {\n  var that = this\n  that.model.getCount(function(todos) {\n    that.view.render('updateElementCount', todos.active)\n    that.view.render('clearCompletedButton', {\n      completed: todos.completed,\n      visible: todos.completed > 0\n    })\n\n    that.view.render('toggleAll', {checked: todos.completed === todos.total})\n    that.view.render('contentBlockVisibility', {visible: todos.total > 0})\n  })\n}\n\n/**\n * Re-filters the todo items, based on the active route.\n * @param {boolean|undefined} force  forces a re-painting of todo items.\n */\nController.prototype._filter = function(force) {\n  var activeRoute = this._activeRoute.charAt(0).toUpperCase() + this._activeRoute.substr(1)\n\n  // Update the elements on the page, which change with each completed todo\n  this._updateCount()\n\n  // If the last active route isn't \"All\", or we're switching routes, we\n  // re-create the todo item elements, calling:\n  //   this.show[All|Active|Completed]();\n  if (force || this._lastActiveRoute !== 'All' || this._lastActiveRoute !== activeRoute) {\n    this['show' + activeRoute]()\n  }\n\n  this._lastActiveRoute = activeRoute\n}\n\n/**\n * Simply updates the filter nav's selected states\n */\nController.prototype._updateFilterState = function(currentPage) {\n  // Store a reference to the active route, allowing us to re-filter todo\n  // items as they are marked complete or incomplete.\n  this._activeRoute = currentPage\n\n  if (currentPage === '') {\n    this._activeRoute = 'All'\n  }\n\n  this._filter()\n\n  this.view.render('setFilter', currentPage)\n}\n\nexport default Controller;\n\n\n\n// WEBPACK FOOTER //\n// ./controller.js","'use strict'\n\n/**\n * Creates a new Model instance and hooks up the storage.\n *\n * @constructor\n * @param {object} storage A reference to the client side storage class\n */\nfunction Model(storage) {\n  this.storage = storage\n}\n\n/**\n * Creates a new todo model\n *\n * @param {string} [title] The title of the task\n * @param {function} [callback] The callback to fire after the model is created\n */\nModel.prototype.create = function(title, callback) {\n  title = title || ''\n  callback = callback || function() {\n  }\n\n  var newItem = {\n    title: title.trim(),\n    completed: false\n  }\n\n  this.storage.save(newItem, callback)\n}\n\n/**\n * Finds and returns a model in storage. If no query is given it'll simply\n * return everything. If you pass in a string or number it'll look that up as\n * the ID of the model to find. Lastly, you can pass it an object to match\n * against.\n *\n * @param {string|number|object} [query] A query to match models against\n * @param {function} [callback] The callback to fire after the model is found\n *\n * @example\n * model.read(1, func); // Will find the model with an ID of 1\n * model.read('1'); // Same as above\n * //Below will find a model with foo equalling bar and hello equalling world.\n * model.read({ foo: 'bar', hello: 'world' });\n */\nModel.prototype.read = function(query, callback) {\n  var queryType = typeof query\n  callback = callback || function() {\n  }\n\n  if (queryType === 'function') {\n    callback = query\n    return this.storage.findAll(callback)\n  } else if (queryType === 'string' || queryType === 'number') {\n    query = parseInt(query, 10)\n    this.storage.find({id: query}, callback)\n  } else {\n    this.storage.find(query, callback)\n  }\n}\n\n/**\n * Updates a model by giving it an ID, data to update, and a callback to fire when\n * the update is complete.\n *\n * @param {number} id The id of the model to update\n * @param {object} data The properties to update and their new value\n * @param {function} callback The callback to fire when the update is complete.\n */\nModel.prototype.update = function(id, data, callback) {\n  this.storage.save(data, callback, id)\n}\n\n/**\n * Removes a model from storage\n *\n * @param {number} id The ID of the model to remove\n * @param {function} callback The callback to fire when the removal is complete.\n */\nModel.prototype.remove = function(id, callback) {\n  this.storage.remove(id, callback)\n}\n\n/**\n * WARNING: Will remove ALL data from storage.\n *\n * @param {function} callback The callback to fire when the storage is wiped.\n */\nModel.prototype.removeAll = function(callback) {\n  this.storage.drop(callback)\n}\n\n/**\n * Returns a count of all todos\n */\nModel.prototype.getCount = function(callback) {\n  var todos = {\n    active: 0,\n    completed: 0,\n    total: 0\n  }\n\n  this.storage.findAll(function(data) {\n    data.forEach(function(todo) {\n      if (todo.completed) {\n        todos.completed++\n      } else {\n        todos.active++\n      }\n\n      todos.total++\n    })\n    callback(todos)\n  })\n}\n\nexport default Model;\n\n\n// WEBPACK FOOTER //\n// ./model.js","'use strict'\n\n/**\n * Creates a new client side storage object and will create an empty\n * collection if no collection already exists.\n *\n * @param {string} name The name of our DB we want to use\n * @param {function} callback Our fake DB uses callbacks because in\n * real life you probably would be making AJAX calls\n */\nfunction Store(name, callback) {\n  callback = callback || function() {\n  }\n\n  this._dbName = name\n\n  if (!localStorage[name]) {\n    var data = {\n      todos: []\n    }\n\n    localStorage[name] = JSON.stringify(data)\n  }\n\n  callback.call(this, JSON.parse(localStorage[name]))\n}\n\n/**\n * Finds items based on a query given as a JS object\n *\n * @param {object} query The query to match against (i.e. {foo: 'bar'})\n * @param {function} callback   The callback to fire when the query has\n * completed running\n *\n * @example\n * db.find({foo: 'bar', hello: 'world'}, function (data) {\n *\t // data will return any items that have foo: bar and\n *\t // hello: world in their properties\n * });\n */\nStore.prototype.find = function(query, callback) {\n  if (!callback) {\n    return\n  }\n\n  var todos = JSON.parse(localStorage[this._dbName]).todos\n\n  callback.call(this, todos.filter(function(todo) {\n    for (var q in query) {\n      if (query[q] !== todo[q]) {\n        return false\n      }\n    }\n    return true\n  }))\n}\n\n/**\n * Will retrieve all data from the collection\n *\n * @param {function} callback The callback to fire upon retrieving data\n */\nStore.prototype.findAll = function(callback) {\n  callback = callback || function() {\n  }\n  callback.call(this, JSON.parse(localStorage[this._dbName]).todos)\n}\n\n/**\n * Will save the given data to the DB. If no item exists it will create a new\n * item, otherwise it'll simply update an existing item's properties\n *\n * @param {object} updateData The data to save back into the DB\n * @param {function} callback The callback to fire after saving\n * @param {number} id An optional param to enter an ID of an item to update\n */\nStore.prototype.save = function(updateData, callback, id) {\n  var data = JSON.parse(localStorage[this._dbName])\n  var todos = data.todos\n\n  callback = callback || function() {\n  }\n\n  // If an ID was actually given, find the item and update each property\n  if (id) {\n    for (var i = 0; i < todos.length; i++) {\n      if (todos[i].id === id) {\n        for (var key in updateData) {\n          if (updateData.hasOwnProperty(key)) {\n            todos[i][key] = updateData[key]\n          }\n        }\n        break\n      }\n    }\n\n    localStorage[this._dbName] = JSON.stringify(data)\n    callback.call(this, JSON.parse(localStorage[this._dbName]).todos)\n  } else {\n    // Generate an ID\n    updateData.id = new Date().getTime()\n\n    todos.push(updateData)\n    localStorage[this._dbName] = JSON.stringify(data)\n    callback.call(this, [updateData])\n  }\n}\n\n/**\n * Will remove an item from the Store based on its ID\n *\n * @param {number} id The ID of the item you want to remove\n * @param {function} callback The callback to fire after saving\n */\nStore.prototype.remove = function(id, callback) {\n  var data = JSON.parse(localStorage[this._dbName])\n  var todos = data.todos\n\n  for (var i = 0; i < todos.length; i++) {\n    if (todos[i].id == id) { // eslint-disable-line\n      todos.splice(i, 1)\n      break\n    }\n  }\n\n  localStorage[this._dbName] = JSON.stringify(data)\n  callback.call(this, JSON.parse(localStorage[this._dbName]).todos)\n}\n\n/**\n * Will drop all storage and start fresh\n *\n * @param {function} callback The callback to fire after dropping the data\n */\nStore.prototype.drop = function(callback) {\n  localStorage[this._dbName] = JSON.stringify({todos: []})\n  callback.call(this, JSON.parse(localStorage[this._dbName]).todos)\n}\n\nexport default Store;\n\n\n// WEBPACK FOOTER //\n// ./store.js","var htmlEscapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#x27;',\n  '`': '&#x60;'\n}\n\nvar escapeHtmlChar = function(chr) {\n  return htmlEscapes[chr]\n}\n\nvar reUnescapedHtml = /[&<>\"'`]/g\nvar reHasUnescapedHtml = new RegExp(reUnescapedHtml.source)\n\nvar escape = function(string) {\n  return (string && reHasUnescapedHtml.test(string)) ?\n    string.replace(reUnescapedHtml, escapeHtmlChar) :\n    string\n}\n\n/**\n * Sets up defaults for all the Template methods such as a default template\n *\n * @constructor\n */\nfunction Template() {\n  this.defaultTemplate = '<li data-id=\"{{id}}\" class=\"{{completed}}\">' +\n    '<div class=\"view\">' +\n    '<input class=\"toggle\" type=\"checkbox\" {{checked}}>' +\n    '<label>{{title}}</label>' +\n    '<button class=\"destroy\"></button>' +\n    '</div>' +\n    '</li>'\n}\n\n/**\n * Creates an <li> HTML string and returns it for placement in your app.\n *\n * NOTE: In real life you should be using a templating engine such as Mustache\n * or Handlebars, however, this is a vanilla JS example.\n *\n * @param {object} data The object containing keys you want to find in the\n *                      template to replace.\n * @returns {string} HTML String of an <li> element\n *\n * @example\n * view.show({\n *\tid: 1,\n *\ttitle: \"Hello World\",\n *\tcompleted: 0,\n * });\n */\nTemplate.prototype.show = function(data) {\n  var i, l\n  var view = ''\n\n  for (i = 0, l = data.length; i < l; i++) {\n    var template = this.defaultTemplate\n    var completed = ''\n    var checked = ''\n\n    if (data[i].completed) {\n      completed = 'completed'\n      checked = 'checked'\n    }\n\n    template = template.replace('{{id}}', data[i].id)\n    template = template.replace('{{title}}', escape(data[i].title))\n    template = template.replace('{{completed}}', completed)\n    template = template.replace('{{checked}}', checked)\n\n    view = view + template\n  }\n\n  return view\n}\n\n/**\n * Displays a counter of how many to dos are left to complete\n *\n * @param {number} activeTodos The number of active todos.\n * @returns {string} String containing the count\n */\nTemplate.prototype.itemCounter = function(activeTodos) {\n  var plural = activeTodos === 1 ? '' : 's'\n\n  return '<strong>' + activeTodos + '</strong> item' + plural + ' left'\n}\n\n/**\n * Updates the text within the \"Clear completed\" button\n *\n * @param  {[type]} completedTodos The number of completed todos.\n * @returns {string} String containing the count\n */\nTemplate.prototype.clearCompletedButton = function(completedTodos) {\n  if (completedTodos > 0) {\n    return 'Clear completed'\n  } else {\n    return ''\n  }\n}\n\nexport default Template;\n\n\n// WEBPACK FOOTER //\n// ./template.js","import {qs, qsa, $on, $parent, $delegate} from './helpers';\n\n/**\n * View that abstracts away the browser's DOM completely.\n * It has two simple entry points:\n *\n *   - bind(eventName, handler)\n *     Takes a todo application event and registers the handler\n *   - render(command, parameterObject)\n *     Renders the given command with the options\n */\nfunction View(template) {\n  this.template = template\n\n  this.ENTER_KEY = 13\n  this.ESCAPE_KEY = 27\n\n  this.$todoList = qs('.todo-list')\n  this.$todoItemCounter = qs('.todo-count')\n  this.$clearCompleted = qs('.clear-completed')\n  this.$main = qs('.main')\n  this.$footer = qs('.footer')\n  this.$toggleAll = qs('.toggle-all')\n  this.$newTodo = qs('.new-todo')\n}\n\nView.prototype._removeItem = function(id) {\n  var elem = qs('[data-id=\"' + id + '\"]')\n\n  if (elem) {\n    this.$todoList.removeChild(elem)\n  }\n}\n\nView.prototype._clearCompletedButton = function(completedCount, visible) {\n  this.$clearCompleted.innerHTML = this.template.clearCompletedButton(completedCount)\n  this.$clearCompleted.style.display = visible ? 'block' : 'none'\n}\n\nView.prototype._setFilter = function(currentPage) {\n  qs('.filters .selected').className = ''\n  qs('.filters [href=\"#/' + currentPage + '\"]').className = 'selected'\n}\n\nView.prototype._elementComplete = function(id, completed) {\n  var listItem = qs('[data-id=\"' + id + '\"]')\n\n  if (!listItem) {\n    return\n  }\n\n  listItem.className = completed ? 'completed' : ''\n\n  // In case it was toggled from an event and not by clicking the checkbox\n  qs('input', listItem).checked = completed\n}\n\nView.prototype._editItem = function(id, title) {\n  var listItem = qs('[data-id=\"' + id + '\"]')\n\n  if (!listItem) {\n    return\n  }\n\n  listItem.className = listItem.className + ' editing'\n\n  var input = document.createElement('input')\n  input.className = 'edit'\n\n  listItem.appendChild(input)\n  input.focus()\n  input.value = title\n}\n\nView.prototype._editItemDone = function(id, title) {\n  var listItem = qs('[data-id=\"' + id + '\"]')\n\n  if (!listItem) {\n    return\n  }\n\n  var input = qs('input.edit', listItem)\n  listItem.removeChild(input)\n\n  listItem.className = listItem.className.replace('editing', '')\n\n  qsa('label', listItem).forEach(function(label) {\n    label.textContent = title\n  })\n}\n\nView.prototype.render = function(viewCmd, parameter) {\n  var that = this\n  var viewCommands = {\n    showEntries: function() {\n      that.$todoList.innerHTML = that.template.show(parameter)\n    },\n    removeItem: function() {\n      that._removeItem(parameter)\n    },\n    updateElementCount: function() {\n      that.$todoItemCounter.innerHTML = that.template.itemCounter(parameter)\n    },\n    clearCompletedButton: function() {\n      that._clearCompletedButton(parameter.completed, parameter.visible)\n    },\n    contentBlockVisibility: function() {\n      that.$main.style.display = that.$footer.style.display = parameter.visible ? 'block' : 'none'\n    },\n    toggleAll: function() {\n      that.$toggleAll.checked = parameter.checked\n    },\n    setFilter: function() {\n      that._setFilter(parameter)\n    },\n    clearNewTodo: function() {\n      that.$newTodo.value = ''\n    },\n    elementComplete: function() {\n      that._elementComplete(parameter.id, parameter.completed)\n    },\n    editItem: function() {\n      that._editItem(parameter.id, parameter.title)\n    },\n    editItemDone: function() {\n      that._editItemDone(parameter.id, parameter.title)\n    }\n  }\n\n  viewCommands[viewCmd]()\n}\n\nView.prototype._itemId = function(element) {\n  var li = $parent(element, 'li')\n  return parseInt(li.dataset.id, 10)\n}\n\nView.prototype._bindItemEditDone = function(handler) {\n  var that = this\n  $delegate(that.$todoList, 'li .edit', 'blur', function() {\n    if (!this.dataset.iscanceled) {\n      handler({\n        id: that._itemId(this),\n        title: this.value\n      })\n    }\n  })\n\n  $delegate(that.$todoList, 'li .edit', 'keypress', function(event) {\n    if (event.keyCode === that.ENTER_KEY) {\n      // Remove the cursor from the input when you hit enter just like if it\n      // were a real form\n      this.blur()\n    }\n  })\n}\n\nView.prototype._bindItemEditCancel = function(handler) {\n  var that = this\n  $delegate(that.$todoList, 'li .edit', 'keyup', function(event) {\n    if (event.keyCode === that.ESCAPE_KEY) {\n      this.dataset.iscanceled = true\n      this.blur()\n\n      handler({id: that._itemId(this)})\n    }\n  })\n}\n\nView.prototype.bind = function(event, handler) { // eslint-disable-line\n  var that = this\n  if (event === 'newTodo') {\n    $on(that.$newTodo, 'change', function() {\n      handler(that.$newTodo.value)\n    })\n\n  } else if (event === 'removeCompleted') {\n    $on(that.$clearCompleted, 'click', function() {\n      handler()\n    })\n\n  } else if (event === 'toggleAll') {\n    $on(that.$toggleAll, 'click', function() {\n      handler({completed: this.checked})\n    })\n\n  } else if (event === 'itemEdit') {\n    $delegate(that.$todoList, 'li label', 'dblclick', function() {\n      handler({id: that._itemId(this)})\n    })\n\n  } else if (event === 'itemRemove') {\n    $delegate(that.$todoList, '.destroy', 'click', function() {\n      handler({id: that._itemId(this)})\n    })\n\n  } else if (event === 'itemToggle') {\n    $delegate(that.$todoList, '.toggle', 'click', function() {\n      handler({\n        id: that._itemId(this),\n        completed: this.checked\n      })\n    })\n\n  } else if (event === 'itemEditDone') {\n    that._bindItemEditDone(handler)\n\n  } else if (event === 'itemEditCancel') {\n    that._bindItemEditCancel(handler)\n  }\n}\n\nexport default View;\n\n\n// WEBPACK FOOTER //\n// ./view.js"],"sourceRoot":""}